{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { setLoader } from \"./masterSlice\";\nimport * as API from \"../../utils/api.service\";\nexport const getStartUpDetails = createAsyncThunk(\"StartUpList\", async (submitData, {\n  dispatch\n}) => {\n  dispatch(setLoader(true));\n  const data = await API.postList(submitData);\n  console.log(data);\n  dispatch(setLoader(false));\n  return data;\n});\nconst initialState = {\n  StartUpList: {\n    data: [],\n    error: null\n  }\n};\nconst startUpListSlice = createSlice({\n  name: \"StartUpList\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(getStartUpDetails.fulfilled, (state, action) => {\n      state.StartUpList.data = action.payload.data;\n    }).addCase(getStartUpDetails.rejected, (state, action) => {\n      state.StartUpList.error = action.error.message;\n    });\n  }\n});\nexport default startUpListSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","setLoader","API","getStartUpDetails","submitData","dispatch","data","postList","console","log","initialState","StartUpList","error","startUpListSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","rejected","message","reducer"],"sources":["/opt/lampp/htdocs/infusion_project/frontend/src/store/slice/startUpListSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { setLoader } from \"./masterSlice\";\nimport * as API from \"../../utils/api.service\";\n\nexport const getStartUpDetails = createAsyncThunk(\"StartUpList\", async (submitData, { dispatch }) => {\n    dispatch(setLoader(true))\n    const data = await API.postList(submitData);\n    console.log(data)\n    dispatch(setLoader(false))\n    return data;\n\n});\n\n\nconst initialState = {\n    StartUpList: {\n        data: [],\n        error: null,\n    }\n};\n\nconst startUpListSlice = createSlice({\n    name: \"StartUpList\",\n    initialState,\n    reducers: {},\n    extraReducers: (builder) => {\n        builder\n            .addCase(getStartUpDetails.fulfilled, (state, action) => {\n                state.StartUpList.data = action.payload.data;\n            })\n            .addCase(getStartUpDetails.rejected, (state, action) => {\n                state.StartUpList.error = action.error.message;\n            })\n    },\n});\n\nexport default startUpListSlice.reducer;"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,SAASC,SAAS,QAAQ,eAAe;AACzC,OAAO,KAAKC,GAAG,MAAM,yBAAyB;AAE9C,OAAO,MAAMC,iBAAiB,GAAGH,gBAAgB,CAAC,aAAa,EAAE,OAAOI,UAAU,EAAE;EAAEC;AAAS,CAAC,KAAK;EACjGA,QAAQ,CAACJ,SAAS,CAAC,IAAI,CAAC,CAAC;EACzB,MAAMK,IAAI,GAAG,MAAMJ,GAAG,CAACK,QAAQ,CAACH,UAAU,CAAC;EAC3CI,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACjBD,QAAQ,CAACJ,SAAS,CAAC,KAAK,CAAC,CAAC;EAC1B,OAAOK,IAAI;AAEf,CAAC,CAAC;AAGF,MAAMI,YAAY,GAAG;EACjBC,WAAW,EAAE;IACTL,IAAI,EAAE,EAAE;IACRM,KAAK,EAAE;EACX;AACJ,CAAC;AAED,MAAMC,gBAAgB,GAAGd,WAAW,CAAC;EACjCe,IAAI,EAAE,aAAa;EACnBJ,YAAY;EACZK,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACFC,OAAO,CAACf,iBAAiB,CAACgB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACrDD,KAAK,CAACT,WAAW,CAACL,IAAI,GAAGe,MAAM,CAACC,OAAO,CAAChB,IAAI;IAChD,CAAC,CAAC,CACDY,OAAO,CAACf,iBAAiB,CAACoB,QAAQ,EAAE,CAACH,KAAK,EAAEC,MAAM,KAAK;MACpDD,KAAK,CAACT,WAAW,CAACC,KAAK,GAAGS,MAAM,CAACT,KAAK,CAACY,OAAO;IAClD,CAAC,CAAC;EACV;AACJ,CAAC,CAAC;AAEF,eAAeX,gBAAgB,CAACY,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}