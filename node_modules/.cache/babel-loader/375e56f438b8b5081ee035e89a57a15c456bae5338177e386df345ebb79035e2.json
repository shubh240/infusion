{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/Project/frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { BrowserRouter, useNavigate } from \"react-router-dom\";\nimport Spinner from './component/Spinner';\nimport { useSelector } from 'react-redux';\nimport AllRoutes from './routes/Routes';\nimport 'remixicon/fonts/remixicon.css';\nimport Cookies from 'js-cookie';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const {\n    isLoading\n  } = useSelector(state => state.master);\n  const isLoggedIn = Cookies.get('token');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isLoading && /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(AllRoutes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n// const AuthRedirect = ({ isLoggedIn }) => {\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (isLoggedIn) {\n//       navigate('/dashboard'); \n//     } else {\n//       navigate('/login'); \n//     }\n//   }, [isLoggedIn, navigate]);\n\n//   return null;\n// };\n_s(App, \"gZGrcRmI8a7ACzMWUSkGrvtnyX0=\", false, function () {\n  return [useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","BrowserRouter","useNavigate","Spinner","useSelector","AllRoutes","Cookies","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isLoading","state","master","isLoggedIn","get","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/opt/lampp/htdocs/Project/frontend/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { BrowserRouter, useNavigate } from \"react-router-dom\";\nimport Spinner from './component/Spinner';\nimport { useSelector } from 'react-redux';\nimport AllRoutes from './routes/Routes';\nimport 'remixicon/fonts/remixicon.css';\nimport Cookies from 'js-cookie';\n\nconst App = () => {\n  const { isLoading } = useSelector((state) => state.master);\n  const isLoggedIn = Cookies.get('token');\n  \n  return (\n    <>\n      {isLoading && <Spinner />}\n      <BrowserRouter>\n        {/* <AuthRedirect isLoggedIn={isLoggedIn} /> */}\n        <AllRoutes />\n      </BrowserRouter>\n    </>\n  );\n};\n\n// const AuthRedirect = ({ isLoggedIn }) => {\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     if (isLoggedIn) {\n//       navigate('/dashboard'); \n//     } else {\n//       navigate('/login'); \n//     }\n//   }, [isLoggedIn, navigate]);\n\n//   return null;\n// };\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,aAAa,EAAEC,WAAW,QAAQ,kBAAkB;AAC7D,OAAOC,OAAO,MAAM,qBAAqB;AACzC,SAASC,WAAW,QAAQ,aAAa;AACzC,OAAOC,SAAS,MAAM,iBAAiB;AACvC,OAAO,+BAA+B;AACtC,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM;IAAEC;EAAU,CAAC,GAAGT,WAAW,CAAEU,KAAK,IAAKA,KAAK,CAACC,MAAM,CAAC;EAC1D,MAAMC,UAAU,GAAGV,OAAO,CAACW,GAAG,CAAC,OAAO,CAAC;EAEvC,oBACET,OAAA,CAAAE,SAAA;IAAAQ,QAAA,GACGL,SAAS,iBAAIL,OAAA,CAACL,OAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzBd,OAAA,CAACP,aAAa;MAAAiB,QAAA,eAEZV,OAAA,CAACH,SAAS;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA,eAChB,CAAC;AAEP,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAAV,EAAA,CA3BMD,GAAG;EAAA,QACeP,WAAW;AAAA;AAAAmB,EAAA,GAD7BZ,GAAG;AA6BT,eAAeA,GAAG;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}